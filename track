#!/usr/bin/env python


import argparse
import os
import traintrack
import logging


def run():
    #signal.signal(signal.SIGINT, signal_handler)
    # construct the argument parser and parse the arguments
    ap = argparse.ArgumentParser()
    ap.add_argument("-i", "--input", dest='input_', help="path to the video source or device number", default='0')
    ap.add_argument("-l", "--logpath", help="path to log file", default='/var/log/train-track/event.log')
    ap.add_argument(
        "-v", "--video", default=False, help="Show capture and motion images", action='store_true')
    ap.add_argument(
        "-s", "--slow", default=False, help="run in slow mode", action='store_true')
    ap.add_argument("-b", "--bb", help="Optional bounding box")
    args = ap.parse_args()

    tracker = traintrack.TrainTracker(args.input_, args.video, args.slow, args.bb)
    #self.bb = 520, 250, 200, 70
    logdir = os.path.dirname(args.logpath)
    if not os.path.exists(logdir):
        os.makedirs(logdir)
    logger = logging.getLogger()
    logger.setLevel(logging.INFO)
    formatter = logging.Formatter('%(asctime)s - %(name)s - %(levelname)s - %(message)s')
    fileHandler = logging.FileHandler(args.logpath)
    fileHandler.setFormatter(formatter)
    consoleHandler = logging.StreamHandler()
    consoleHandler.setFormatter(formatter)
    logger.addHandler(fileHandler)
    logger.addHandler(consoleHandler)

    try:
        tracker.run()
    except KeyboardInterrupt:
        print 'Stopping'
        del tracker


if __name__ == '__main__':
    run()
